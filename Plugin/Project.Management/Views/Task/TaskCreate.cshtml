@model CloudVOffice.Data.DTO.Projects.ProjectTaskDTO;
@{
	Layout = "_MainAppLayout";
	ViewData["Title"] = " Task Create";
}
@addTagHelper *, Syncfusion.EJ2
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Collections;
@using Newtonsoft.Json;
<header class="main-heading">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
				<div class="page-icon">
					<i class="icon-laptop_windows"></i>
				</div>
				<div class="page-title">
					<h5>Project</h5>
					<h6 class="sub-heading">  </h6>
				</div>
			</div>
			<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
				<div class="right-actions">
					<span class="last-login">  </span>
				</div>
			</div>
		</div>
	</div>
</header>
<div class="main-content">
	<div class="row gutters">
		<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
			<div class="card">
				<form asp-route="Projects/Task/TaskCreate" method="post" autocomplete="off">
					<div asp-validation-summary="ModelOnly" class="message-error"></div>
					<div class="card-header"><b>New Task</b></div>
					<div class="card-body">
						<div class="form-row">
							<div class="form-group col-md-3">
								<input asp-for="@Model.ProjectTaskId" type="hidden" />
								<span asp-validation-for="ProjectTaskId"></span>
							</div>
						</div>
						<div class="form-row">
							<div class="form-group col-md-3">
								<label for="ProjectId" class="form-label">Project </label>
								<ejs-dropdownlist id="ProjectId" allowFiltering="true" ejs-for="@Model.ProjectId" filtering="onProjectfiltering" change="onChangeProject" dataSource="@(new SelectList((IEnumerable)ViewBag.Projects, "ProjectId", "ProjectName").Items)" placeholder="Select a Project" popupHeight="220px">
									<e-dropdownlist-fields text="ProjectName" value="ProjectId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="ProjectId"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="EmployeeId" class="form-label">Assign </label>
								<ejs-dropdownlist id="EmployeeId" allowFiltering="true" ejs-for="@Model.EmployeeId" placeholder="Select to Assign" popupHeight="220px">
									<e-dropdownlist-fields text="employee.fullName" value="employeeId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="EmployeeId"></span>
							</div>

							<div class="form-group col-md-3">

								<label for="IsGroup" class="form-label">Is Group</label>
								<br />
								<input asp-for="@Model.IsGroup" type="checkbox" />
								<span asp-validation-for="IsGroup"></span>
							</div>

						</div>
						<div class="form-row">
							<div class="form-group col-md-3">

								<label for="TaskName" class="form-label">Task Name&nbsp;<span style="color:red;"><b>*</b></span></label>
								<input asp-for="@Model.TaskName" type="text" class="form-control" autofocus="autofocus" placeholder="Task Name" />
								<span asp-validation-for="TaskName"></span>
							</div>

							<div class="form-group col-md-3">
								<label for="ParentTaskId" class="form-label">Parent Task</label>

								<ejs-dropdownlist id="ParentTaskId" allowFiltering="true" ejs-for="@Model.ParentTaskId" placeholder="Select Parent Task" popupHeight="220px">
									<e-dropdownlist-fields text="taskName" value="projectTaskId"></e-dropdownlist-fields>
								</ejs-dropdownlist>

								<span asp-validation-for="ParentTaskId"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="Priority" class="form-label">Priority</label>
								<select  asp-for="@Model.Priority"  class="form-control" autofocus="autofocus">
									<option value="Medium">Medium</option>
									<option value="Low">Low</option>
									<option value="High">High</option>
								</select>
							</div>


						</div>
						<div class="form-row">
							<div class="form-group col-md-3">
								<label for="ExpectedStartDate" class="form-label">Expected Start Date</label>
								<input asp-for="@Model.ExpectedStartDate" type="date" class="form-control" autofocus="autofocus" placeholder="Expected Start Date" />
								<span asp-validation-for="ExpectedStartDate"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="ExpectedEndDate" class="form-label">Expected End Date</label>
								<input asp-for="@Model.ExpectedEndDate" type="date" class="form-control" autofocus="autofocus" placeholder="Expected End Date" />
								<span asp-validation-for="ExpectedEndDate"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="ExpectedTimeInHours" class="form-label">ExpectedTime InHours</label>
								<input asp-for="@Model.ExpectedTimeInHours" type="text" class="form-control" autofocus="autofocus" placeholder="ExpectedTime InHours" />
								<span asp-validation-for="ExpectedTimeInHours"></span>
							</div>



						</div>
						<div class="form-row">
							<div class="form-group col-md-3">
								<label for="Progress" class="form-label">Progress</label>
								<input asp-for="@Model.Progress" type="text" class="form-control" autofocus="autofocus" placeholder="Progress" />
								<span asp-validation-for="Progress"></span>
							</div>

							<div class="form-group col-md-3">
								<label for="TaskStatus" class="form-label">Task Status</label>
								<select asp-for="@Model.TaskStatus" class="form-control" autofocus="autofocus" placeholder="Task Status">
									<option value="Open">Open</option>
									<option value="Completed">Completed</option>
									<option value="Cancelled">Cancelled</option>

								</select>
								<span asp-validation-for="TaskStatus"></span>

							</div>




						</div>



					</div>
					<div class="card-header"><b>Details </b></div>
					<div class="form-group col-md-3">
						<label for="TaskDescription" class="form-label">Task Description</label>
						<textarea asp-for="@Model.TaskDescription" type="text" class="input-with-feedback form-control" data-fieldtype="Small Text" autofocus="autofocus" placeholder="Task Description" style="height: 150px;"></textarea>
						<span asp-validation-for="TaskDescription"></span>
					</div>

					<div class="card-body">
						<div class="col-lg-2 col-md-2 col-sm-12">
							<button type="submit" class="btn btn-primary">Save</button>
						</div>
					</div>

				</form>
			</div>
		</div>
	</div>
</div>
<script>
	function onProjectfiltering(e) {
		var query = new ej.data.Query();
		query = (e.text !== '') ? query.where('ProjectName', 'startswith', e.text, true) : query;
		e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.Projects)), query);
	}


	function onChangeProject(args) {
		getParentTasks(args.value)
		$.ajax({
			type: "GET",
			url: '/Projects/Project/ProjectEmployeeByProjectId',
			data: { projectId: args.value },
			contentType: "application/json;",
			dataType: "json",
			success: function (result) {
				debugger;

				var employeeDropDown = document.getElementById("EmployeeId").ej2_instances[0];
				employeeDropDown.dataSource = result;
				//cityDropDown.refresh();
				employeeDropDown.dataBind();

			},
			error: function () {

			}
		});


	}
	function getParentTasks(projectid) {
		$.ajax({
			type: "GET",
			url: '/Projects/Task/GroupProjectTaskByProjectId',
			data: { projectId: projectid },
			contentType: "application/json;",
			dataType: "json",
			success: function (result) {
				debugger;

				var ParentTaskDropDown = document.getElementById("ParentTaskId").ej2_instances[0];
				ParentTaskDropDown.dataSource = result;
				//cityDropDown.refresh();
				ParentTaskDropDown.dataBind();

			},
			error: function () {

			}
		});
	}

</script>