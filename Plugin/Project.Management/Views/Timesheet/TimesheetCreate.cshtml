@model CloudVOffice.Data.DTO.Projects.TimesheetDTO;
@{
	Layout = "_MainAppLayout";
	var activityCategory = new string[] {"Project Work"
									,"Counselling /Discussion"
									,"Documentation/Report/Policy/SOP/MIS"
									,"Event Management & Participation"
									,"Imaginar"
									,"Interviews"
									,"Project & Process Audit"
									,"Review & Monitor/Report Analysis/Meetings"
									,"RFP Response"
									,"R&D"
									,"Project (CSR)"
									,"Project (Product)"
									,"Townhall"
									,"Quality Review"
									,"Performance Assessment"
									,"Induction/knowledge sharing"
									,"Training & Capacity Building"
									,"Annual function"
									,"Meetings & Reviews"
									,"Travel for office Tour" };
}
@addTagHelper *, Syncfusion.EJ2
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Collections;
@using Newtonsoft.Json;
<header class="main-heading">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
				<div class="page-icon">
					<i class="icon-laptop_windows"></i>
				</div>
				<div class="page-title">
					<h5>CRM Dashboard</h5>
					<h6 class="sub-heading">Welcome to Unify Admin Template</h6>
				</div>
			</div>
			<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
				<div class="right-actions">
					<span class="last-login">Last Login: 2 hours ago</span>
				</div>
			</div>
		</div>
	</div>
</header>
<div class="main-content">
	<div class="row gutters">
		<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
			<div class="card">
				<form asp-route="Projects/Timesheet/TimesheetCreate" method="post" autocomplete="off">
					<div asp-validation-summary="ModelOnly" class="message-error"></div>
					<div class="card-header"><b>Timesheet</b></div>
					<div class="card-body">
						<div class="form-row">
							<div class="form-group col-md-3">
								<input asp-for="@Model.TimesheetId" type="hidden" />
								<span asp-validation-for="TimesheetId"></span>
							</div>
						</div>

						<div class="form-row">

							<div class="form-group col-md-3">
								<label for="TimeSheetForDate" class="form-label">TimeSheet For Date</label>
								<input asp-for="@Model.TimeSheetForDate" type="date" class="form-control" autofocus="autofocus" placeholder="TimeSheet For Date" />
								<span asp-validation-for="TimeSheetForDate"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="TimesheetActivityType" class="form-label">Activity Category</label>
								<ejs-dropdownlist id="TimesheetActivityType" allowFiltering="true" ejs-for="@Model.TimesheetActivityType" dataSource="activityCategory" placeholder="Select Activity Category" popupHeight="220px" change="onChangeActivityCategory">

								</ejs-dropdownlist>
								<span asp-validation-for="TimesheetActivityType"></span>
							</div>


							<div class="form-group col-md-3">
								<label for="ActivityId" class="form-label"> Activity Type</label>
								<ejs-dropdownlist id="ActivityId" allowFiltering="true" ejs-for="@Model.ActivityId" placeholder="Select Activity" popupHeight="220px">
									<e-dropdownlist-fields text="projectActivityName" value="projectActivityTypeId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="ActivityId"></span>
							</div>

						</div>
						<div class="form-row" id="ProjectWork" style="display:none">
							<div class="form-group col-md-3">
								<label for="ProjectId" class="form-label">Project</label>
								<ejs-dropdownlist id="ProjectId" allowFiltering="true" ejs-for="@Model.ProjectId" placeholder="Select Project" popupHeight="220px" change="onChangeProject">
									<e-dropdownlist-fields text="projectName" value="projectId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="ProjectId"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="TaskId" class="form-label">Project Task</label>
								<ejs-dropdownlist id="TaskId" allowFiltering="true" ejs-for="@Model.TaskId" placeholder="Select a Project Task" popupHeight="220px">
									<e-dropdownlist-fields text="taskName" value="projectTaskId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="TaskId"></span>
							</div>



						</div>

						<div class="form-row">

							<div class="form-group col-md-3">
								<label for="FromTime" class="form-label">From Time</label>
								<input asp-for="@Model.FromTime" type="time" class="form-control" id="fromtime" autofocus="autofocus" placeholder="From Time" />
								<span asp-validation-for="FromTime"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="ToTime" class="form-label">To Time</label>
								<input asp-for="@Model.ToTime" type="time" class="form-control" id="totime" autofocus="autofocus" placeholder="To Time	" onchange="TestOnTextChange()" />
								<span asp-validation-for="ToTime"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="DurationInHours" class="form-label">Duration In Hours</label>
								<input asp-for="@Model.DurationInHours" type="text" id="duration" class="form-control" autofocus="autofocus" placeholder="Duration In Hours" />
								<span asp-validation-for="DurationInHours"></span>
							</div>

						</div>

						<div class="form-row">
							<div class="form-group col-md-3">
								<label for="IsBillable" class="form-label">Is Billable</label>
								<input asp-for="@Model.IsBillable" type="text" class="form-control" autofocus="autofocus" placeholder="Is Billable" />
								<span asp-validation-for="IsBillable"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="HourlyRate" class="form-label">Hourly Rate</label>
								<input asp-for="@Model.HourlyRate" type="text" class="form-control" autofocus="autofocus" placeholder="Hourly Rate	" />
								<span asp-validation-for="HourlyRate"></span>
							</div>


						</div>


					</div>
					<div class="card-header"><b>Description </b></div>
					<div class="form-group col-md-3">
						<label for="Description" class="form-label">Description</label>
						<textarea asp-for="@Model.Description" type="text" class="input-with-feedback form-control" data-fieldtype="Small Text" autofocus="autofocus" placeholder="Description" style="height: 150px;"></textarea>
						<span asp-validation-for="Description"></span>
					</div>



					<div class="card-body">
						<div class="col-lg-2 col-md-2 col-sm-12">
							<button type="submit" class="btn btn-primary">Save</button>
						</div>
					</div>

				</form>
			</div>
		</div>
	</div>
</div>
<script>
	

	//Time Calculation
	function pad(num) {
		return ("0" + num).slice(-2);
	}
	function diffTime(start, end) {
		var s = start.split(":"), sMin = +s[1] + s[0] * 60,
			e = end.split(":"), eMin = +e[1] + e[0] * 60,
			diff = eMin - sMin;
		if (diff < 0) { sMin -= 12 * 60; diff = eMin - sMin }
		var h = Math.floor(diff / 60),
			m = diff % 60;
		return "" + pad(h) + "." + pad(m);
	}


	function TestOnTextChange() {
		document.getElementById('duration').value = diffTime(
			document.getElementById('fromtime').value,
			document.getElementById('totime').value
		);
	}



	function onChangeActivityCategory(args) {

		$.ajax({
			type: "GET",
			url: '/Projects/ProjectActivityType/GetProjectActivityTypesByActivityCategory',
			data: { ActivityCategory: args.value },
			contentType: "application/json;",
			dataType: "json",
			success: function (result) {
				if (args.value == "Project Work"){
					$('#ProjectWork').show();
					bindProjects();
				}
				else{
					$('#ProjectWork').hide();
				}
				var projectActivityDropDown = document.getElementById("ActivityId").ej2_instances[0];
				projectActivityDropDown.dataSource = result;
				//cityDropDown.refresh();
				projectActivityDropDown.dataBind();

			},
			error: function () {

			}
		});


	}

	function bindProjects(){
		$.ajax({
			type: "GET",
			url: '/Projects/Project/GetMyAssignedProjectByEmployee',
			
			contentType: "application/json;",
			dataType: "json",
			success: function (result) {
			
				var projectActivityDropDown = document.getElementById("ProjectId").ej2_instances[0];
				projectActivityDropDown.dataSource = result;
				//cityDropDown.refresh();
				projectActivityDropDown.dataBind();

			},
			error: function () {

			}
		});
		
	}



	function onChangeProject(args) {

		$.ajax({
			type: "GET",
			url: '/Projects/Task/NotCanceledTasksByProjectId',
			data: { ProjectId: args.value },
			contentType: "application/json;",
			dataType: "json",
			success: function (result) {
				
				var projectActivityDropDown = document.getElementById("TaskId").ej2_instances[0];
				projectActivityDropDown.dataSource = result;
				//cityDropDown.refresh();
				projectActivityDropDown.dataBind();

			},
			error: function () {

			}
		});


	}


</script>